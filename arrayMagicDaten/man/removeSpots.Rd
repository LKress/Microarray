%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This file was automatically generated by Rdoc on 2006-04-12  8:38:18.
% Do NOT modify this file, instead modify the source (/buness/R/TestingOfarrayMagic/Rpacks/arrayMagic/R/removeSpots.R).
% Rdoc is copyright (C) 2001, Henrik Bengtsson, henrikb@braju.com.
% Download the Rdoc compiler at http://www.braju.com/R/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 \name{removeSpots}

 \title{Remove specified spots from objects}

 \alias{removeSpots}

 \usage{removeSpots(arrayDataObject, exprSetRGObject=NULL, spotsToBeRemoved=NULL, spotIdentifier="Name")}

 \description{All elements matching the strings in \code{spotsToBeRemoved}
              are taken out of the object \code{arrayDataObject} and 
              the corresponding ones out of the
              object \code{exprSetRGObject} as well,
              if supplied.
              }

 \value{A named list containing
        an object of type \code{\link{arrayData}} labelled "arrayDataObject",
        an object of type \code{\link{exprSetRG}} labelled "exprSetRGObject"
        and an integer specifying the number of removed items
        labelled "nrOfRemovedItems".
        }


 \arguments{

  \item{arrayDataObject}{object of type \code{\link{arrayData}};
                         required; default: missing}
  \item{exprSetRGObject}{object of type \code{\link{exprSetRG}};
                         optional; default: \code{NULL}}
  \item{spotIdentifier}{character string, i.e. name of the
                        column of \code{getSpotAttr(arrayDataObject)}
                        used for matching;
                        default "Name"}
  \item{spotsToBeRemoved}{vector of character strings;
                          default: \code{NULL}}
 }
 
 \details{}

 \seealso{\code{\link{arrayData-class}},
          \code{\link{exprSetRG-class}}
         }

 \examples{

  intensities <- array(data=runif(600),dim=c(100,2,3))
  dimnames(intensities) <- list(NULL, c("green","red"), NULL)
  arrayDataObject <- new("arrayData", intensities=intensities, spotAttr=data.frame(Name=I(rep(c("x","y","Blank","Blank","z"),20))), hybAttrList=NULL)
  res <- removeSpots(arrayDataObject, spotsToBeRemoved=c("x","z"))
  stopifnot( dim(getIntensities(res[["arrayDataObject"]]))[1] == 3*20 )

   \dontshow{

  indGreen=1:3
  indRed=4:6
  channels <- matrix( c(indGreen,indRed), nrow=length(indGreen), byrow=FALSE )
  colnames(channels) <- c("green","red")
  exprSetRGObject <- new("exprSetRG", exprs=matrix(data=runif(600),nrow=100,ncol=6), phenoData=new("phenoData", pData=data.frame(matrix(0,nrow=6,ncol=1)), varLabels=list(rep("varLabel1",1))), channels=channels)
  res2 <- removeSpots(arrayDataObject=arrayDataObject,exprSetRGObject=exprSetRGObject, spotsToBeRemoved=c("x","z"))
  stopifnot( dim(exprs(res2[["exprSetRGObject"]]))[1] == 3*20 )
  res3 <- removeSpots(arrayDataObject=arrayDataObject,exprSetRGObject=exprSetRGObject, spotsToBeRemoved=c("ggrrrr"))
  stopifnot( dim(exprs(res3[["exprSetRGObject"]]))[1] == 100 )
  stopifnot( dim(getIntensities(res3[["arrayDataObject"]]))[1] == 100 )

   }
  }

 \keyword{utilities} ## required

 \author{Andreas Buness <a.buness@dkfz.de>}
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% End of File
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
