%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This file was automatically generated by Rdoc on 2006-04-12  8:38:17.
% Do NOT modify this file, instead modify the source (/buness/R/TestingOfarrayMagic/Rpacks/arrayMagic/R/controlledSubsetting.R).
% Rdoc is copyright (C) 2001, Henrik Bengtsson, henrikb@braju.com.
% Download the Rdoc compiler at http://www.braju.com/R/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 \name{controlledSubsetting}

 \title{Subsetting of Arrays}

 \alias{controlledSubsetting}

 \description{Finer control on the drop argument as in []}

 \value{subsetted array}

 \usage{controlledSubsetting(a, ranges, drop)}

 \arguments{
  \item{a}{array; required; default: missing.}
  \item{ranges}{list of vectors; list length must match
                dimensionality of a; each element of the
                numeric vector specifies
                the subset of the corresponding dimension of a;
                if is.na(element) the whole corresponding dimension is kept;
                required; default: missing.}
  \item{drop}{optional; specifies each dimension of array a which will
              be dropped, the corresponding subset must specify exact one
              element; if missing all such subsets are dropped;
              default: missing.}
 }
 
 \details{}

 \seealso{\code{\link{controlledApply}}}

 \examples{
            a <- array(1:400, dim=c(2,3,5,6))
            r <- controlledSubsetting(a=a, ranges=list(1,2,3,2), drop=2)
            stopifnot(length(dim(r)) == 3 )
            stopifnot(r == a[1,2,3,2])
            r <- controlledSubsetting(a=a, ranges=list(2,1:2,2,2:3), drop=3)
            stopifnot( all(r[1,,,drop=TRUE] == a[2,1:2,2,2:3]) )
            r <- controlledSubsetting(a=a, ranges=list(1:2,1:2,2,3), drop=3)
            stopifnot( all(r[,,1,drop=TRUE] == a[1:2,1:2,2,3]) )
            r <- controlledSubsetting(a=a, ranges=list(1:2,1:2,2,3), drop=c(3,4))
            stopifnot( all(r == a[1:2,1:2,2,3]) )
            r <- controlledSubsetting(a=a, ranges=list(1:2,1:2,1:5,3), drop=c(4))
            stopifnot( all(r == a[1:2,1:2,1:5,3]) )
            r <- controlledSubsetting(a=a, ranges=list(NA,NA,1:5,3), drop=c(4))
            stopifnot( all(r == a[,,1:5,3]) )

	}

 \keyword{utilities}

 \author{Andreas Buness <a.buness@dkfz.de>}
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% End of File
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
