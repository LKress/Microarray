%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This file was automatically generated by Rdoc on 2006-04-12  8:38:19.
% Do NOT modify this file, instead modify the source (/buness/R/TestingOfarrayMagic/Rpacks/arrayMagic/R/writeToFile.R).
% Rdoc is copyright (C) 2001, Henrik Bengtsson, henrikb@braju.com.
% Download the Rdoc compiler at http://www.braju.com/R/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 \name{writeToFile}

 \title{Writes a textual representation of an exprSetRG
        and/or arrayData object}

 \alias{writeToFile}

 \usage{writeToFile(arrayDataObject, exprSetRGObject, additionalDataMatrix, rowSelection, slideNameColumn, channels=c("logRatio"), fileName="dumpedData.txt", savePath=".", fullOutput=TRUE, coding=FALSE)}

 \description{\code{writeToFile} generates a well-formated
              tab-deliminated output file of data
              stored in the \code{\link{exprSetRG}} and/or
              \code{\link{arrayData}} objects.
              Different "views" on either a corresponding pair of
              an \code{\link{exprSetRG}}- and an
              \code{\link{arrayData}}-object or of a
              single object itself are possible.
              The argument \code{channels} allows to specify the "views".
              The microarray slide or channel annotation, as well as
              the spot annotation is aligned to the data block
              if given.
              For further restriction and control of the output,
              e.g. slide subsets or ordering of slides, you may use
              the subsetting operations offered by the
              \code{\link{exprSetRG-class}} and
              \code{\link{arrayData-class}} beforehand
              (e.g. slideSubset and [] ).
             }

 \value{The function is called for its side effect, i.e. writing a file.}


 \arguments{
  \item{arrayDataObject}{object of class \code{\link{arrayData}};
                         optional/required,
                         cf. \code{channels}; default: missing}
  \item{exprSetRGObject}{object of class \code{\link{exprSetRG}};
                         optional/required,
                         cf. \code{channels}; default: missing}
  \item{additionalDataMatrix}{class \code{matrix}; optional; default: missing.
                              The rows must correspond to those of the
                              data objects; \code{colnames} must be supplied.}
  \item{rowSelection}{vector of indexes; optional; default: missing}
  \item{slideNameColumn}{character string; optional; default: missing;
     must refer to a valid column in
     \code{\link{getHybAttr}}(\code{arrayDataObject})
     or in \code{\link{pDataSlide}}(\code{exprSetRGobject}) }
  \item{channels}{vector of character strings; default: \code{c("logRatio")};
       valid character strings are:
       "logRatio", "green", "red", "greenRelative", "redRelative",
       "rawGreen", "rawRed", "rawGreenRelative", "rawRedRelative",
       "se.exprsLogRatio", "se.exprsGreen", "se.exprsRed".
       "Raw"-types must not mix with not "raw"-types and vice versa.
       "logRatio"-types must not mix with "colour"-types.
       The "raw" types require the argument \code{arrayDataObject},
       all other types requires at least the argument \code{exprSetRGObject}.}
  \item{fileName}{character string; required; default: "dumpedData.txt"}
  \item{savePath}{character string; required; default: "."}
  \item{fullOutput}{logical; adds \code{phenoData} information at the top
                   of the table ; by default: \code{TRUE}}
  \item{coding}{logical; adds integer-coded-\code{phenoData} information
                at the top to the table only if \code{coding = TRUE} and
                \code{fullOutput = TRUE}; default: \code{FALSE}}
 }
 
 \details{}

 \seealso{
           \code{\link{exprSetRG-class}},
           \code{\link{arrayData-class}},
           \code{\link{write.htmltable}}
         }

 \examples{
  \dontshow{
   indGreen <- c(2,4,6); indRed <- c(1,3,5)
   channels <- matrix( c(indGreen,indRed), nrow=length(indGreen), byrow=FALSE )
   colnames(channels) <- c("green","red")
   myPData <- data.frame(commonOne=c(1,1,2,2,3,3), commonTwo=c(1,1,1,1,2,2), redOne=c(1,NA,2,NA,3,NA), redTwo=c(1,-1,2,-1,3,-1), greenOne=c(NA,10,NA,20,NA,30), greenTwo=c(-10,10,-10,20,-10,30))
   myPhenoData <- new("phenoData", pData=myPData, varLabels=as.list(colnames(myPData)))
   e <- new("exprSetRG", exprs=matrix(1,nrow=10,ncol=6), se.exprs=matrix(0,nrow=10,ncol=6), phenoData=myPhenoData, channels=channels)
   writeToFile(exprSetRGObject=e, savePath=tempdir())
   writeToFile(exprSetRGObject=e, savePath=tempdir(), channels=c("red", "greenRelative"))
   writeToFile(exprSetRGObject=e, channels=c("se.exprsLogRatio"), savePath=tempdir() )
   writeToFile(exprSetRGObject=e, channels=c("logRatio","se.exprsLogRatio"), slideNameColumn="commonTwo", savePath=tempdir() )
   writeToFile(exprSetRGObject=e, channels=c("logRatio","se.exprsLogRatio"), slideNameColumn="commonTwo", rowSelection=1:5, coding=TRUE, savePath=tempdir() )
   spotAttr <- data.frame(spots=c("a","b","c","d","e","f","1","2","3","4"))
   hL <- list(green=myPData[,indGreen],red=myPData[,indRed])
   aD <- new("arrayData", spotAttr=spotAttr, hybAttrList=hL)
   writeToFile(exprSetRGObject=e, arrayDataObject=aD, savePath=tempdir())
   hL <- list(green=myPData[,indGreen],red=myPData[,indGreen]) ## Attention green twice
   intensities <- array(data=runif(120),dim=c(10,2,6))
   dimnames(intensities) <- list(NULL, c("green","red"), NULL)
   aD <- new("arrayData", spotAttr=spotAttr, hybAttrList=hL, intensities=intensities)
   writeToFile(arrayDataObject=aD, channels="rawRed", savePath=tempdir())
   writeToFile(arrayDataObject=aD, channels=c("rawRed", "rawRedRelative"), savePath=tempdir())
   writeToFile(arrayDataObject=aD, channels=c("rawGreen", "rawRedRelative") ,coding=TRUE, savePath=tempdir())
   writeToFile(arrayDataObject=aD, channels=c("rawGreen", "rawRedRelative") , slideNameColumn="commonTwo", savePath=tempdir())
  }
 }

 \keyword{IO}

 \author{Andreas Buness <a.buness@dkfz.de>}
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% End of File
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
